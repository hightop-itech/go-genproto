// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.15.3
// source: hightop/ftu/v1/ftu.proto

package ftu

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActivateDeviceReq_ActCmd int32

const (
	ActivateDeviceReq_Stop  ActivateDeviceReq_ActCmd = 0
	ActivateDeviceReq_Start ActivateDeviceReq_ActCmd = 1
)

// Enum value maps for ActivateDeviceReq_ActCmd.
var (
	ActivateDeviceReq_ActCmd_name = map[int32]string{
		0: "Stop",
		1: "Start",
	}
	ActivateDeviceReq_ActCmd_value = map[string]int32{
		"Stop":  0,
		"Start": 1,
	}
)

func (x ActivateDeviceReq_ActCmd) Enum() *ActivateDeviceReq_ActCmd {
	p := new(ActivateDeviceReq_ActCmd)
	*p = x
	return p
}

func (x ActivateDeviceReq_ActCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivateDeviceReq_ActCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_hightop_ftu_v1_ftu_proto_enumTypes[0].Descriptor()
}

func (ActivateDeviceReq_ActCmd) Type() protoreflect.EnumType {
	return &file_hightop_ftu_v1_ftu_proto_enumTypes[0]
}

func (x ActivateDeviceReq_ActCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivateDeviceReq_ActCmd.Descriptor instead.
func (ActivateDeviceReq_ActCmd) EnumDescriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{0, 0}
}

type ActivateDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID int64                    `protobuf:"varint,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Cmd      ActivateDeviceReq_ActCmd `protobuf:"varint,2,opt,name=Cmd,proto3,enum=hightop.ftu.v1.ActivateDeviceReq_ActCmd" json:"Cmd,omitempty"`
}

func (x *ActivateDeviceReq) Reset() {
	*x = ActivateDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateDeviceReq) ProtoMessage() {}

func (x *ActivateDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateDeviceReq.ProtoReflect.Descriptor instead.
func (*ActivateDeviceReq) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{0}
}

func (x *ActivateDeviceReq) GetDeviceID() int64 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

func (x *ActivateDeviceReq) GetCmd() ActivateDeviceReq_ActCmd {
	if x != nil {
		return x.Cmd
	}
	return ActivateDeviceReq_Stop
}

type DeviceStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Result               `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Status map[string]StatusType `protobuf:"bytes,2,rep,name=Status,proto3" json:"Status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=hightop.ftu.v1.StatusType"`
}

func (x *DeviceStatusResp) Reset() {
	*x = DeviceStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatusResp) ProtoMessage() {}

func (x *DeviceStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStatusResp.ProtoReflect.Descriptor instead.
func (*DeviceStatusResp) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceStatusResp) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeviceStatusResp) GetStatus() map[string]StatusType {
	if x != nil {
		return x.Status
	}
	return nil
}

type ParamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID int64  `protobuf:"varint,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	SensorID int64  `protobuf:"varint,2,opt,name=SensorID,proto3" json:"SensorID,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` //convert map[string]interface{} to json string
}

func (x *ParamReq) Reset() {
	*x = ParamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamReq) ProtoMessage() {}

func (x *ParamReq) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamReq.ProtoReflect.Descriptor instead.
func (*ParamReq) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{2}
}

func (x *ParamReq) GetDeviceID() int64 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

func (x *ParamReq) GetSensorID() int64 {
	if x != nil {
		return x.SensorID
	}
	return 0
}

func (x *ParamReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ParamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Content string  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //convert map[string]interface{} to json string
}

func (x *ParamResp) Reset() {
	*x = ParamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamResp) ProtoMessage() {}

func (x *ParamResp) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamResp.ProtoReflect.Descriptor instead.
func (*ParamResp) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{3}
}

func (x *ParamResp) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ParamResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpgradeDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID int64  `protobuf:"varint,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	BinPath  string `protobuf:"bytes,2,opt,name=BinPath,proto3" json:"BinPath,omitempty"`
}

func (x *UpgradeDeviceReq) Reset() {
	*x = UpgradeDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDeviceReq) ProtoMessage() {}

func (x *UpgradeDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDeviceReq.ProtoReflect.Descriptor instead.
func (*UpgradeDeviceReq) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{4}
}

func (x *UpgradeDeviceReq) GetDeviceID() int64 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

func (x *UpgradeDeviceReq) GetBinPath() string {
	if x != nil {
		return x.BinPath
	}
	return ""
}

type FileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID int64  `protobuf:"varint,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	FilePath string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
}

func (x *FileReq) Reset() {
	*x = FileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileReq) ProtoMessage() {}

func (x *FileReq) ProtoReflect() protoreflect.Message {
	mi := &file_hightop_ftu_v1_ftu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileReq.ProtoReflect.Descriptor instead.
func (*FileReq) Descriptor() ([]byte, []int) {
	return file_hightop_ftu_v1_ftu_proto_rawDescGZIP(), []int{5}
}

func (x *FileReq) GetDeviceID() int64 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

func (x *FileReq) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

var File_hightop_ftu_v1_ftu_proto protoreflect.FileDescriptor

var file_hightop_ftu_v1_ftu_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2f, 0x66, 0x74, 0x75, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x74, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x68, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x68, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x2f, 0x66, 0x74, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x03, 0x43, 0x6d, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x63, 0x74, 0x43, 0x6d, 0x64,
	0x52, 0x03, 0x43, 0x6d, 0x64, 0x22, 0x1d, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x43, 0x6d, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x10, 0x01, 0x22, 0xdf, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x55, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x69, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x69,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x22, 0x41, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x32, 0xb5, 0x03, 0x0a, 0x09, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74,
	0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x68, 0x69,
	0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74,
	0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x20, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x18, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x68, 0x69, 0x67, 0x68,
	0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x18, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x68,
	0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x20, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66,
	0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x2e,
	0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x2e, 0x66, 0x74, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68,
	0x69, 0x67, 0x68, 0x74, 0x6f, 0x70, 0x2d, 0x69, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2d,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x69, 0x67, 0x68, 0x74, 0x6f, 0x70,
	0x2f, 0x66, 0x74, 0x75, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x74, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hightop_ftu_v1_ftu_proto_rawDescOnce sync.Once
	file_hightop_ftu_v1_ftu_proto_rawDescData = file_hightop_ftu_v1_ftu_proto_rawDesc
)

func file_hightop_ftu_v1_ftu_proto_rawDescGZIP() []byte {
	file_hightop_ftu_v1_ftu_proto_rawDescOnce.Do(func() {
		file_hightop_ftu_v1_ftu_proto_rawDescData = protoimpl.X.CompressGZIP(file_hightop_ftu_v1_ftu_proto_rawDescData)
	})
	return file_hightop_ftu_v1_ftu_proto_rawDescData
}

var file_hightop_ftu_v1_ftu_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hightop_ftu_v1_ftu_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_hightop_ftu_v1_ftu_proto_goTypes = []interface{}{
	(ActivateDeviceReq_ActCmd)(0), // 0: hightop.ftu.v1.ActivateDeviceReq.ActCmd
	(*ActivateDeviceReq)(nil),     // 1: hightop.ftu.v1.ActivateDeviceReq
	(*DeviceStatusResp)(nil),      // 2: hightop.ftu.v1.DeviceStatusResp
	(*ParamReq)(nil),              // 3: hightop.ftu.v1.ParamReq
	(*ParamResp)(nil),             // 4: hightop.ftu.v1.ParamResp
	(*UpgradeDeviceReq)(nil),      // 5: hightop.ftu.v1.UpgradeDeviceReq
	(*FileReq)(nil),               // 6: hightop.ftu.v1.FileReq
	nil,                           // 7: hightop.ftu.v1.DeviceStatusResp.StatusEntry
	(*Result)(nil),                // 8: hightop.ftu.v1.Result
	(StatusType)(0),               // 9: hightop.ftu.v1.StatusType
	(*Empty)(nil),                 // 10: hightop.ftu.v1.Empty
}
var file_hightop_ftu_v1_ftu_proto_depIdxs = []int32{
	0,  // 0: hightop.ftu.v1.ActivateDeviceReq.Cmd:type_name -> hightop.ftu.v1.ActivateDeviceReq.ActCmd
	8,  // 1: hightop.ftu.v1.DeviceStatusResp.Result:type_name -> hightop.ftu.v1.Result
	7,  // 2: hightop.ftu.v1.DeviceStatusResp.Status:type_name -> hightop.ftu.v1.DeviceStatusResp.StatusEntry
	8,  // 3: hightop.ftu.v1.ParamResp.result:type_name -> hightop.ftu.v1.Result
	9,  // 4: hightop.ftu.v1.DeviceStatusResp.StatusEntry.value:type_name -> hightop.ftu.v1.StatusType
	1,  // 5: hightop.ftu.v1.DeviceOps.ActivateDevice:input_type -> hightop.ftu.v1.ActivateDeviceReq
	10, // 6: hightop.ftu.v1.DeviceOps.GetDeviceStatus:input_type -> hightop.ftu.v1.Empty
	3,  // 7: hightop.ftu.v1.DeviceOps.GetParam:input_type -> hightop.ftu.v1.ParamReq
	3,  // 8: hightop.ftu.v1.DeviceOps.SetParam:input_type -> hightop.ftu.v1.ParamReq
	5,  // 9: hightop.ftu.v1.DeviceOps.Upgrade:input_type -> hightop.ftu.v1.UpgradeDeviceReq
	6,  // 10: hightop.ftu.v1.DeviceOps.SyncFiles:input_type -> hightop.ftu.v1.FileReq
	8,  // 11: hightop.ftu.v1.DeviceOps.ActivateDevice:output_type -> hightop.ftu.v1.Result
	2,  // 12: hightop.ftu.v1.DeviceOps.GetDeviceStatus:output_type -> hightop.ftu.v1.DeviceStatusResp
	4,  // 13: hightop.ftu.v1.DeviceOps.GetParam:output_type -> hightop.ftu.v1.ParamResp
	4,  // 14: hightop.ftu.v1.DeviceOps.SetParam:output_type -> hightop.ftu.v1.ParamResp
	8,  // 15: hightop.ftu.v1.DeviceOps.Upgrade:output_type -> hightop.ftu.v1.Result
	8,  // 16: hightop.ftu.v1.DeviceOps.SyncFiles:output_type -> hightop.ftu.v1.Result
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_hightop_ftu_v1_ftu_proto_init() }
func file_hightop_ftu_v1_ftu_proto_init() {
	if File_hightop_ftu_v1_ftu_proto != nil {
		return
	}
	file_hightop_ftu_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hightop_ftu_v1_ftu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hightop_ftu_v1_ftu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hightop_ftu_v1_ftu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hightop_ftu_v1_ftu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hightop_ftu_v1_ftu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hightop_ftu_v1_ftu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hightop_ftu_v1_ftu_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hightop_ftu_v1_ftu_proto_goTypes,
		DependencyIndexes: file_hightop_ftu_v1_ftu_proto_depIdxs,
		EnumInfos:         file_hightop_ftu_v1_ftu_proto_enumTypes,
		MessageInfos:      file_hightop_ftu_v1_ftu_proto_msgTypes,
	}.Build()
	File_hightop_ftu_v1_ftu_proto = out.File
	file_hightop_ftu_v1_ftu_proto_rawDesc = nil
	file_hightop_ftu_v1_ftu_proto_goTypes = nil
	file_hightop_ftu_v1_ftu_proto_depIdxs = nil
}
